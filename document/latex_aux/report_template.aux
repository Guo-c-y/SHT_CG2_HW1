\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{Problem 1: Melkman's Algorithm for Simple Polygon Convex Hull}{2}{section*.1}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{2.1 Data structures}{2}{section*.4}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{2.2 Algorithmic idea}{3}{section*.5}\protected@file@percent }
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Melkman’s Convex Hull for a Simple Polygon}}{4}{algorithm.1}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{3.1 Special cases}{4}{section*.7}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{3.2 Case 1: Collinear Band with Near-Degenerate Contact}{5}{section*.8}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{3.3 Case 2: Dual-Pocket Polygon for Deque Update Validation}{5}{section*.9}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{3.4 Case 3: Interior-Point Skipping and Sparse Expansion Test}{6}{section*.10}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{3.5 Visual summary and case coverage}{7}{section*.11}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Visualization of the three representative polygon cases used in testing Melkman’s algorithm. Case~1: collinear band with near-degenerate contact; Case~2: dual-pocket polygon; Case~3: interior-point skipping with sparse expansion.}}{7}{figure.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Visualization of convex hull results for the three designed test cases. Each subfigure shows the original polygon (gray line and points) and the computed convex hull (bold black outline). Hull vertices are labeled in counterclockwise order, and $n$ denotes the number of vertices in each polygon.}}{8}{figure.2}\protected@file@percent }
\newlabel{fig:hulls}{{2}{8}{Visualization of convex hull results for the three designed test cases. Each subfigure shows the original polygon (gray line and points) and the computed convex hull (bold black outline). Hull vertices are labeled in counterclockwise order, and $n$ denotes the number of vertices in each polygon}{figure.2}{}}
\@writefile{toc}{\contentsline {paragraph}{5.1 Theoretical}{8}{section*.14}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{5.2 Empirical}{9}{section*.15}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Generated simple polygon test cases with increasing vertex counts ($n=10$ to $n=90$). Each subfigure represents a distinct input size used for empirical complexity evaluation.}}{10}{figure.3}\protected@file@percent }
\newlabel{fig:testpolys}{{3}{10}{Generated simple polygon test cases with increasing vertex counts ($n=10$ to $n=90$). Each subfigure represents a distinct input size used for empirical complexity evaluation}{figure.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Convex hulls computed by Melkman’s algorithm for the test polygons shown in Figure~\ref {fig:testpolys}. The results confirm correctness and stability across all polygon sizes.}}{11}{figure.4}\protected@file@percent }
\newlabel{fig:testhulls}{{4}{11}{Convex hulls computed by Melkman’s algorithm for the test polygons shown in Figure~\ref {fig:testpolys}. The results confirm correctness and stability across all polygon sizes}{figure.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Empirical complexity analysis of Melkman’s algorithm. (a) Median runtime versus input size $n$, fitted with $T(n)\propto n^{1.28}$ ($R^2=0.96$); (b) total operation count showing a nearly perfect linear fit ($R^2=0.99$); (c) operation breakdown at $n=90$, indicating that orientation and cross-product computations dominate total cost.}}{12}{figure.5}\protected@file@percent }
\newlabel{fig:complexity}{{5}{12}{Empirical complexity analysis of Melkman’s algorithm. (a) Median runtime versus input size $n$, fitted with $T(n)\propto n^{1.28}$ ($R^2=0.96$); (b) total operation count showing a nearly perfect linear fit ($R^2=0.99$); (c) operation breakdown at $n=90$, indicating that orientation and cross-product computations dominate total cost}{figure.5}{}}
\@writefile{toc}{\contentsline {section}{Problem 2: General Voronoi}{13}{section*.16}\protected@file@percent }
\gdef \@abspage@last{13}
